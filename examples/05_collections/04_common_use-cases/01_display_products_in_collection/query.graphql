

# This query is returning data from a single collection, specified by the handle.

# The data being returned in the product connection can be used to display a page of products.

# The `products` connection requires pagination in this query, since collections can contain a large number of products.
# This query includes the `sortKey` argument on the products connection, this return products in the order specified by the sortKey

# Products can contain multiple images, so the `images` connection requires pagination.
# In this example we only want to display 1 image per product, so we're only asking for first:1

# Since products can contain multiple variants, we've asked the products connection to return price ranges.

# The 'priceRange' object returns prices in the shop's currency. Multicurrency will be demonstrated in the next example



{
  collectionByHandle (handle:"all") {
    id
    title
    products (first:50 sortKey:BEST_SELLING) {
      edges {
        node {
          id
          title
          vendor
          availableForSale
          images (first:1) {
            edges {
              node {
                id
                transformedSrc
                width
                height
                altText
              }
            }
          }
          priceRange {
            minVariantPrice {
              amount
              currencyCode
            }
            maxVariantPrice {
              amount
              currencyCode
            }
          }
        }
      }
    }
  }
}
